# Base for all actors.
^CoreVisibleActor:
	# All our actors are sprite based and need to render sprites.
	RenderSprites:
		FactionImages:
	# At default fog hides every actor.
	HiddenUnderFog:
	# Allow actors to rotate and use facings.
	BodyOrientation: # TODO verify if we can remove this from constructions!
	# Automatically detect the number of facings from the sequences.
	QuantizeFacingsFromSequence: # TODO see BodyOrientation todo
	# Required to see debug overlays.
	CombatDebugOverlay:
	# Display debug information above actor.
	RenderDebugState:

# Map decoration actors.
^CoreDecoration:
	Inherits: ^CoreVisibleActor
	# Always visible, no special shroud logic here.
	-HiddenUnderFog:
	FrozenUnderFog:
	# Decorations have sprites but do not use facing for them.
	WithSpriteBody:
	# Default setting makes decorations take 1x1 tiles.
	Building:
		Dimensions: 1,1
		Footprint: x
		AllowPlacementOnResources: true
	# Put decorations in own catgegory in map editor.
	MapEditorData:
		Categories: Decorations
	# Enforce neutral ownership.
	RequiresSpecificOwners:
		ValidOwnerNames: Neutral

# Base for all movable units.
^CoreUnit:
	Inherits: ^CoreVisibleActor
	# Default set which fits for most units: Occupy exactly 1 cell / 32x32 pixel tile.
	HitShape:
		Type: Circle
			Radius: 512
	# In general all units can be selected by using its full cell / tile.
	Selectable:
		Bounds: 1024, 1024
		# Make the default priority higher, so units are prefered over constructions.
		Priority: 20
	# Units have a healthbar when selected or hovered.
	SelectionDecorations:
	# Draw target lines.
	DrawLineToTarget:
		Palette:
	# Enemy units must be destroyed to win a game.
	MustBeDestroyed:
	# Units sequences should always use facings.
	WithFacingSpriteBody:
	# Units are visible on the radar.
	AppearsOnRadar:
	# Allow units to use the AttackMove and AssaultMove commands.
	AttackMove:
	# Use their center position instead of their footprint for fog hiding logic.
	HiddenUnderFog:
		Type: CenterPosition
	# Units should die when owner lost the game.
	OwnerLostAction:
		Action: Kill
	# Show control group numbers when selected.
	WithTextControlGroupDecoration:
		Position: BottomRight
	# Units have slightly lighter color on radar than buildings
	ActorRadarColor:
		DeltaS: -0.2
		DeltaV: -0.1
	# Play sound notification on destruction
	ActorLostNotification:
		TextNotification: Unit lost.
	# Unit is added to the observer stats.
	UpdatesPlayerStatistics:

# Base for all buildings and towers.
^CoreConstruction:
	Inherits: ^CoreVisibleActor
	# Last seen state of a building will be rendered under fog, instead of using the default hiding behavior.
	-HiddenUnderFog:
	FrozenUnderFog:
	# Applying "building"-damage to all actors based on this.
	Armor:
		Type: building
	# Add building specific logic to Constructions.
	Building:
		TerrainTypes: Clear, Road, Resources
		AllowPlacementOnResources: true
	# Constructions can be targeted by anything which attacks ground.
	Targetable:
		TargetTypes: Ground, Structure
	# In general all constructions can be selected.
	Selectable:
	# Constructions have sprites but do not use facing for them.
	WithSpriteBody:
	# Constructions require power (and can be manually powered down).
	Power:
		RequiresCondition: !Transforming && !PoweredDown
	# Constructions can be powered down by specific order.
	ToggleConditionOnOrder:
		DisabledSpeech: PowerOn
		EnabledSpeech: PowerOff
		Condition: PoweredDown
		OrderName: PowerDown
	# Constructions are visible on the radar.
	AppearsOnRadar:
	# Constructions should explode when owner lost the game.
	OwnerLostAction:
		Action: Kill
	# No projectiles can pass through a construction.
	BlocksProjectiles:
	# Buildings have healthbars.
	SelectionDecorations:
	# Play sound notification on destruction
	ActorLostNotification:
		Notification: BuildingDestroyed
		TextNotification: Structure destroyed.
	# The view radius of buildings.
	RevealsShroud:
		Range: 4c896
	# Display decorative repair marker when a building is being repaired.
	WithBuildingRepairDecoration:
		Image: repair
		Sequence: idle
		Palette:
		Position: Center
	# Display decorative power marker when a building is powered down.
	WithDecoration@PowerDown:
		Image: powerdown
		Sequence: idle
		Palette:
		Position: Center
		RequiresCondition: PoweredDown
	# Buildings can be repaired.
	RepairableBuilding:
		RequiresCondition: Powered
		RepairInterval: 1
		RepairPercent: 40
		RepairStep: 10
		RepairingNotification: Repairing
		RepairingStoppedNotification: RepairsInterrupted

# Base for all buildings.
^CoreBuilding:
	Inherits: ^CoreConstruction
	# Enemy buildings have to be destroyed to win, even when short game option is used.
	MustBeDestroyed:
		RequiredForShortGame: true
	# Group all buildings in the map editor.
	MapEditorData:
		Categories: Building
	# Should not be auto attacked.
	Targetable@NoAutoAttack:
		TargetTypes: NoAutoAttack
	# Construction animation.
	TransformSequence:
		Image: core_buildingsequence_large
		Condition: Transforming
		ConstructionTime: 135
		TransformSound: 78.smp
	# Render building sprite when transformation is done.
	WithSpriteBody:
		RequiresCondition: !Transforming
	# This actor explodes when killed.
	Explodes:
		Weapon: BuildingExploding
		EmptyWeapon: BuildingExploding
	# Freezes building upon death for a moment before it is disposed.
	FrozenOnDeath:
		Duration: 42
		Condition: IsDead
	# Constructions require power (and can be manually powered down).
	Power:
		RequiresCondition: !Transforming && !PoweredDown && !IsDead
	# Building has a crew.
	BuildingCrew:
		RequiresCondition: !Transforming && !IsDead
		ExitBuildingNotification: LeavingBuilding
	BuildingCrewEntrance@1:
		EntryCell: 0,2
	BuildingCrewEntrance@2:
		EntryCell: -1,2
	# Show pips for the building crew.
	WithBuildingCrewPipsDecoration:
		Palette:
		FullSequence: pip-blue
		PipStride: 6,0
		Margin: 5,5
		RequiresSelection: True
	# Play notification, when the building is conquered or lost to enemy.
	BuildingConqueredNotification:
		TextNotification: Building captured.
		LoseNotification: BuildingLost
		LoseTextNotification: Building lost to enemy.

# Base for all factories.
^CoreFactory:
	Inherits: ^CoreBuilding
	# Hides actors, which prerequisite technologies can't be researched due to research limit restriction (if enabled).
	HideUnbuildableActors:
	Production:
		RequiresCondition: !Transforming
		PauseOnCondition: !Powered || IsDead
	ProductionQueue:
		QueuedAudio: ProductionStarted
		ReadyAudio: ProductionComplete
		CancelledAudio: ProductionCancelled
		OnHoldAudio: ProductionInterrupted
		InfiniteBuildLimit: 10
	# Allow player setting rally point.
	CustomRallyPoint:
		Cursor: move
		LineWidth: 2
	MarkActorProducer:

# Base for all factories using animated exit production.
^CoreDoorFactory:
	Inherits: ^CoreFactory
	# Door production needs custom production.
	-Production:
	AnimatedExitProduction:
		RequiresCondition: !Transforming
		PauseOnCondition: !Powered || IsDead
	-ProductionQueue:
	AnimatedExitProductionQueue:
		QueuedAudio: ProductionStarted
		ReadyAudio: ProductionComplete
		CancelledAudio: ProductionCancelled
		OnHoldAudio: ProductionInterrupted
		InfiniteBuildLimit: 10

# Base for all factories using elevator production.
^CoreElevatorFactory:
	Inherits: ^CoreFactory
	# Use custom RenderSprites trait for rendering elevator.
	-RenderSprites:
	RenderElevatorSprites:
	# Elevator production needs custom production.
	-Production:
	ElevatorProduction:
		ZOffset: -1024
		RequiresCondition: !Transforming
		PauseOnCondition: !Powered || IsDead
	-ProductionQueue:
	AnimatedExitProductionQueue:
		QueuedAudio: ProductionStarted
		ReadyAudio: ProductionComplete
		CancelledAudio: ProductionCancelled
		OnHoldAudio: ProductionInterrupted
		InfiniteBuildLimit: 10

# Base for all towers.
^CoreTower:
	Inherits@1: ^CoreConstruction
	Inherits@2: ^CoreTurret
	# Group all towers in the map editor.
	MapEditorData:
		Categories: Tower
	# Towers are always 1x1 in size.
	Building:
		Dimensions: 1,1
		Footprint: x
	# Defense towers are selectable.
	Selectable:
		Bounds: 1040, 960, 0, 0
	# Towers also have to be destroyed when short game option is used.
	MustBeDestroyed:
		RequiredForShortGame: true
	# Default looking south
	Turreted:
		InitialFacing: 512
		RealignDelay: -1
		RequiresCondition: !Transforming
	# Turret shouldn't attack while transforming.
	AttackTurreted:
		RequiresCondition: !Transforming && !PoweredDown && Powered
	# Turret is not rendered while transforming.
	WithSpriteTurret:
		RequiresCondition: !Transforming
	# Construction animation.
	TransformSequence:
		Image: core_buildingsequence_small
		Condition: Transforming
		ConstructionTime: 135
		TransformSound: 78.smp
	# The body is not rendered while transforming.
	WithSpriteBody:
		RequiresCondition: !Transforming
	# Towers explode when killed.
	Explodes:
		Weapon: DefenseTowerExplosion
		EmptyWeapon: DefenseTowerExplosion
	# Constructions can be targeted by anything which attacks ground.
	Targetable:
		TargetTypes: Ground, Defense
	# Defense towers are able to detect cloaked actors at close proximity.
	DetectCloaked:
		Range: 4c896
		DetectionTypes: Cloak, UnderwaterCloak

# Base for all infantry.
^CoreInfantry:
	Inherits@1: ^CoreUnit
	Inherits@2: ^Cloakable
	# Applying "infantry"-damage to all actors based on this.
	Armor:
		Type: infantry
	# Vehicles can kill infantry by driving over them.
	Crushable:
		WarnProbability: 0
	# Allow 5 infantry units to share a cell and set movement modifiers.
	Mobile:
		Speed: 50
		Locomotor: infantry
	# Actor can be targeted by anything which attacks ground.
	Targetable:
		TargetTypes: Ground, Infantry
	# Calculated size for infantry to match shared cells.
	Selectable:
		Bounds: 256,288,0,0
	# Infantry hitshape
	HitShape:
		Type: Circle
			Radius: 128
	# Infantry has an animation while moving.
	WithMoveAnimation:
	# Grants condition when moving.
	GrantConditionOnMovement:
		Condition: moving
	# Periodically plays an idle animation
	WithIdleAnimation:
		Sequences: idle2
		Interval: 100,200
		RequiresCondition: !moving
	# Group all infantry in the map editor.
	MapEditorData:
		Categories: Infantry
	# Can guard and be guarded
	Guard:
		Voice: Escort
	Guardable:
	# Infantry has own death animations.
	WithDeathAnimation:
		DeathTypes:
			Default: -default
			Explosion: -explode
			Fire: -burn
		CrushedSequence: die-crushed
		CrushedSequencePalette:
		FallbackSequence: die
		# Unlike other traits WithDeathAnimation uses SpriteEffect to render the animation, which is not tied to any actor.
		# Which means it's going to be rendered regardless of whether the actor is in the world or not (i.e. inside a building).
		# Therefore this trait has to be explicitely disabled, so it does not render the animation, when actor dies inside a building.
		RequiresCondition: !InsideBuilding
	# Infantry turns when idle.
	TurnOnIdle:
		MinDelay: 200
		MaxDelay: 600
	# Infantry units have shadow.
	WithIdleOverlay:
		Sequence: shadow
		Palette:
	# Infantry can enter Cargo actors.
	CustomPassenger:
		CargoType: Infantry
		# Keep passenger's activities on unload to make "ride and capture" attacks easier.
		CancelActivitiesOnExit: false
	# Infantry can be a crew member inside a building
	CrewMember:
		BuildingCrewCondition: InsideBuilding
		Voice: Enter
	# Don't play actor lost notification, if the infantry is in building
	ActorLostNotification:
		RequiresCondition: !InsideBuilding

# Add locomotor to world...
^CoreWorld:
	Locomotor@infantry:
		Name: infantry
		Crushes: mine
		SharesCell: true
		TerrainSpeeds:
			Clear: 100
			ClearTree: 100
			ClearPipe: 100
			Creek: 100
			Sand: 100
			SandEdge: 100
			Road: 100
			AsphaltRoad: 100
			Resources: 100

# Base for all vehicles
^CoreVehicle:
	Inherits@1: ^CoreUnit
	Inherits@2: ^Cloakable
	Inherits@3: ^DisabledActor
	Inherits@4: ^InterferedActor
	Armor:
		Type: vehicle
	# Vehicles can kill infantry by moving over them and set movement modifiers.
	Mobile:
		TurnSpeed: 50
		Locomotor: vehicle
		BlockedCursor: generic-blocked
		PauseOnCondition: VehicleDisabled
	# Non-disabled vehicles can be targeted by anything which attacks ground.
	Targetable@Default:
		TargetTypes: Ground, Vehicle
		RequiresCondition: !VehicleDisabled
	# Vehicles have an animation while moving.
	WithMoveAnimation:
	# Group all vehicles in the map editor.
	MapEditorData:
		Categories: Vehicle
	# Can guard and be guarded
	Guard:
		Voice: Escort
	Guardable:
	# This actor explodes when killed.
	Explodes@Default:
		Weapon: VehicleExploding
		EmptyWeapon: VehicleExploding
	# Vehicles smoke when they're heavily damaged.
	WithDamageOverlay:
		Image: smoking
	# Condition to be granted to damaged vehicles so their speed can be decreased.
	GrantConditionOnDamageState@DecreasedSpeed:
		Condition: decreasedspeed
		ValidDamageStates: Heavy, Critical
	# Vehicles are 45% slower when they are heavily damaged.
	SpeedMultiplier:
		Modifier: 55
		RequiresCondition: decreasedspeed

# Add locomotor to world...
^CoreWorld:
	Locomotor@vehicle:
		Name: vehicle
		Crushes: infantry, mine, husk
		CrushDamageTypes: Crush
		TerrainSpeeds:
			Clear: 100
			Creek: 50
			Sand: 50
			SandEdge: 50
			Road: 100
			AsphaltRoad: 100
			Resources: 100
	Locomotor@vehicleFastSand:
		Name: vehicleFastSand
		Crushes: infantry, mine, husk
		CrushDamageTypes: Crush
		TerrainSpeeds:
			Clear: 100
			Creek: 100
			Sand: 100
			SandEdge: 100
			Road: 100
			AsphaltRoad: 100
			Resources: 100

# Base for all aircrafts
^CoreAircraft:
	Inherits@1: ^CoreUnit
	Inherits@2: ^Cloakable
	Inherits@3: ^DisabledActor
	Inherits@4: ^InterferedActor
	# Applying "armor"-damage to all actors based on this.
	Armor:
		Type: aircraft
	# Making the actors actualy fly.
	Aircraft:
		TurnSpeed: 50
		IdleBehavior: Land
		LandableTerrainTypes: Clear, Creek, Shore, Sand, Road, Resources
		CruiseAltitude: 1c256
		AltitudeVelocity: 0c60
		IdealSeparation: 1c0
		RepulsionSpeed: 50
		AirborneCondition: airborne
		VTOL: True
		Crushes: infantry, mine
		PauseOnCondition: !airborne && VehicleDisabled
	# Actor can be targeted by anything which attacks ground.
	Targetable@Ground:
		TargetTypes: Ground, Vehicle
		RequiresCondition: !airborne && !VehicleDisabled
	# Actor can be targeted by anything which attacks air.
	Targetable@Airborne:
		RequiresCondition: airborne
		TargetTypes: Air
	# Group all aircrafts in the map editor.
	MapEditorData:
		Categories: Vehicle
	# Aircraft has visible shadow on ground beneath
	WithShadow:
		Offset: 0,32,0
		ZOffset: -256
		ShadowColor: 00000046
	# Reveal shroud based on aircraft's ground position.
	RevealsShroud:
		Type: GroundPosition
	# Can guard and be guarded
	Guard:
		Voice: Escort
	Guardable:
	# This actor explodes when killed.
	Explodes:
		Weapon: VehicleExploding
		EmptyWeapon: VehicleExploding
		RequiresCondition: !airborne
	# Aircraft can be cloaked, but only if it is on the ground.
	Cloak:
		RequiresCondition: shadowcloak && !airborne
	# Make sure aircrafts cannot be repaired in air.
	WarheadDependentTargetable@Repair:
		RequiresCondition: damaged && !airborne
	# Aircrafts units are visible on the radar when being on ground and in air.
	AppearsOnRadar:
		UseLocation: true
	# Aircrafts will reject any order from player if they are interfered and not airborne.
	RejectsOrders:
		RequiresCondition: VehicleInterfered && !airborne
	# Render an indicator that actor is interfered.
	WithDecoration@Interference:
		RequiresCondition: VehicleInterfered && !airborne

# Base for all aircrafts husks
^CoreAircraftFallingHusk:
	Inherits: ^CoreAircraft
	# Husks shouldn't be selectable in the map editor.
	-MapEditorData:
	# Husks shouldn't be selectable, only interctable.
	-Selectable:
	Interactable:
	# Default health for aircraft husks.
	Health:
		HP: 1000
	# Aircraft husks fall to the ground and explode.
	FallsToEarth:
		Explosion: VehicleExplosion
	# Aircraft husks are no longer targetable.
	Targetable@Airborne:
		TargetTypes: NoTarget
	# Do not notify the player that a husk was lost.
	-ActorLostNotification:
	# Husks are not counted towards player's army.
	-UpdatesPlayerStatistics:
	# This actor explodes when killed.
	Explodes:
		Weapon: AircraftExplosion
		EmptyWeapon: AircraftExplosion
		RequiresCondition: !airborne

# Special light vehicles
^CoreLightVehicle:
	# Can not crush infantry.
	Mobile:
		Locomotor: vehicleNonCrushing

# Add locomotor to world...
^CoreWorld:
	Locomotor@vehicleNonCrushing:
		Name: vehicleNonCrushing
		TerrainSpeeds:
			Clear: 100

# Base for all ships
^CoreShip:
	Inherits@1: ^CoreUnit
	Inherits@2: ^Cloakable
	Inherits@3: ^DisabledActor
	Inherits@4: ^InterferedActor
	# Ships need custom RenderSprites trait to properly cut-off their sprites when exiting the Water Base dock.
	-RenderSprites:
	ProductionExitRenderSprites:
		FactionImages:
		# Tweak this value in conjunction with spawn offsets of Water Base Dock's exits.
		OffsetCutOff: 128
	# Applying "armor"-damage to all actors based on this.
	Armor:
		Type: vehicle
	# Ships can move.
	Mobile:
		TurnSpeed: 50
		Locomotor: ship
		BlockedCursor: generic-blocked
		PauseOnCondition: VehicleDisabled
	# Actor can be targeted by anything which attacks vehicles or ships.
	Targetable@Default:
		TargetTypes: Ship, Vehicle
	# Group all ships in the map editor.
	MapEditorData:
		Categories: Ship
	# Can guard and be guarded
	Guard:
		Voice: Escort
	Guardable:
	# This actor explodes when killed.
	Explodes:
		Weapon: VehicleExploding
		EmptyWeapon: VehicleExploding
	# Ships smoke when they're heavily damaged.
	WithDamageOverlay:
		Image: smoking
	# Condition to be granted to damaged ships so their speed can be decreased.
	GrantConditionOnDamageState@DecreasedSpeed:
		Condition: decreasedspeed
		ValidDamageStates: Heavy, Critical
	# Ships are 45% slower when they are heavily damaged.
	SpeedMultiplier:
		Modifier: 55
		RequiresCondition: decreasedspeed

# Add locomotor to world...
^CoreWorld:
	Locomotor@ship:
		Name: ship
		Crushes: mine, husk
		CrushDamageTypes: Crush
		TerrainSpeeds:
			Water: 100

# Grouped traits for standard turret behavior.
^CoreTurret:
	# General turret behavior.
	Turreted:
		TurnSpeed: 30
	# Special trait to position turret depending on attachment point (only visualy).
	WithSpriteTurret:
	# If it has a turret, it should attack with its turret only, meaning it can aim and fire with it while moving.
	AttackTurreted:
		Voice: Attack
	# Auto target enemies nearby.
	AutoTarget:
	AutoTargetPriority:
		ValidTargets: Ground, Water, Air, Ship, Defense
		InvalidTargets: Structure

# Grouped traits for standard vehicle turret behavior.
^CoreVehicleTurret:
	Inherits: ^CoreTurret
	# General turret behavior.
	Turreted:
		PauseOnCondition: VehicleDisabled

# Grouped traits for standard non-turreted behavior.
^CoreArmedSelf:
	# Units without a turret have to stop and aim at a target to shoot.
	AttackFrontal:
		FacingTolerance: 0
		Voice: Attack
		PauseOnCondition: VehicleDisabled
	# Auto target enemies nearby.
	AutoTarget:
	AutoTargetPriority:
		ValidTargets: Ground, Water, Air, Ship, Defense
		InvalidTargets: Structure

# Grouped traits for standard infantry attack behavior.
^CoreArmedSelfInfantry:
	# Units without a turret have to stop and aim at a target to shoot.
	AttackFrontal:
		FacingTolerance: 15
		Voice: Attack
	# Auto target enemies nearby.
	AutoTarget:
	AutoTargetPriority:
		ValidTargets: Ground, Water, Air, Ship, Defense
		InvalidTargets: Structure
	# Grants condition when shooting.
	GrantConditionOnAttack:
		Condition: shooting
		RevokeDelay: 100
	# Make sure idle animation is not played when shooting.
	WithIdleAnimation:
		RequiresCondition: !shooting && !moving
	# Make sure turning is not triggered when shooting.
	TurnOnIdle:
		RequiresCondition: !shooting
	# Specify sequences to use when shooting and aiming.
	WithAimAttackAnimation:
		SequenceFire: shoot
		SequenceAim: aim

# Grouped traits for standard non-turreted behavior.
^CoreAttackAircraft:
	# Allows aircrafts attacking strafe run way.
	AttackAircraft:
		FacingTolerance: 80
		Voice: Attack
		PersistentTargeting: false
		OpportunityFire: false
	# Auto target enemies nearby.
	AutoTarget:
	AutoTargetPriority:
		ValidTargets: Ground, Water, Air, Ship, Defense
		InvalidTargets: Structure

# Units can be cloaked by SHADOW unit.
^Cloakable:
	# Inherits: ^SilhouetteShadowCloak
	Inherits: ^SemiTransparentShadowCloak
	Cloak:
		RequiresCondition: shadowcloak
		InitialDelay: 0
		CloakDelay: 90
		UncloakOn: None
		EffectPalette:
	# This allows using condition 'shadowcloak' which SHADOW unit provides.
	ExternalCondition:
		Condition: shadowcloak

# Cloak effect: cloaked actors are rendered as semi-transparent.
^SemiTransparentShadowCloak:
	WithCloakShadow:
		ShadowColor: 00000046
		TransparentAppearance: true
		# Muzzle overlay should be always rendered without any modification.
		TraitsToFullyRender: WithMuzzleOverlay
		# Make custom shadow sprites slightly more transparent.
		OverrideShadowAlphaForSequences:
			shadow: 0.75
		# Make turret shadow slightly more transparent.
		ApplyToRenderModifierTraits:
			WithTurretShadow: 0.14

# Cloak effect: cloaked actors are rendered as a shadow silhouette.
^SilhouetteShadowCloak:
	WithCloakShadow:
		# ShadowColor: 00000046
		ShadowColor: 00000046
		TransparentAppearance: false
		# Muzzle overlay should be always rendered without any modification.
		TraitsToFullyRender: WithMuzzleOverlay
		# Hide custom shadow sprites.
		OverrideShadowAlphaForSequences:
			shadow: 0
		# Hide turret shadow.
		ApplyToRenderModifierTraits:
			WithTurretShadow: 0

# Infantry units can be healed when they are nearby BIO vehicle.
^HealedByBio:
	# Infantry units are healed around BIO vehicle.
	ChangesHealth@AroundBio:
		Step: 5
		Delay: 30
		StartIfBelow: 100
		RequiresCondition: healing
	# Infantry units are healed inside BIO vehicle.
	ChangesHealth@InsideBio:
		Step: 500
		Delay: 5
		StartIfBelow: 100
		RequiresCondition: insidebio
	# External condition granted by BIO vehicle.
	ExternalCondition@Healing:
		Condition: healing
	# Condition to be granted to injured infantry so indicator can be shown.
	GrantConditionOnDamageState@Damaged:
		Condition: damaged
		ValidDamageStates: Light, Medium, Heavy, Critical
	# Render an indicator that infantry units are within healing aura.
	WithDecoration:
		Image: healing
		Sequence: idle
		Palette:
		Position: Top
		RequiresSelection: True
		RequiresCondition: healing && damaged
	# Give back a condition to BIO so it can use its flickering animation when it's healing infantry.
	ProximityExternalCondition:
		Condition: activatebio
		Range: 2c896
		RequiresCondition: damaged
	# Give a condition to infantry units which are inside BIO.
	CustomPassenger:
		CargoConditions:
			ed_vehicles_bio: insidebio

^VulnerableToRadiation:
	Targetable@Radiation:
		TargetTypes: RadiationVulnerable

# Actors can be disabled by ion weapons and repaired by HCU-M.
^DisabledActor:
	# Actor can be autorepaired by friendly HCU-M.
	WarheadDependentTargetable@Repair:
		InvalidViewerWarheads: MinimumHealthSpreadDamage
		RequiresCondition: damaged
		TargetTypes: DamagedUnit
	# Disabled actor cannot be targeted by actor with MinimumHealthSpreadDamage warhead (i.e. ion cannon).
	WarheadDependentTargetable@Disabled:
		InvalidViewerWarheads: MinimumHealthSpreadDamage
		TargetTypes: Ground, Vehicle
		RequiresCondition: VehicleDisabled
	# Condition to be granted to damaged actors so HCU-M can autorepair them.
	GrantConditionOnDamageState@Damaged:
		Condition: damaged
		ValidDamageStates: Light, Medium, Heavy, Critical
	# Condition to be granted to heavily damaged actors that disables them.
	# Disabled actors are susceptible to capture by other players (maybe enemies only? TODO: verify!).
	GrantConditionOnHealth@DisableVehicle:
		Condition: VehicleDisabled
		MinHP: 0
		MaxHP: 5
	# Render an indicator that actor is disabled.
	WithDecoration@Disabled:
		Image: disabledActor-indicator
		Sequence: idle
		Palette:
		Position: Top
		ValidRelationships: Ally, Enemy, Neutral
		Offsets:
			VehicleInterfered: -15, 0
		RequiresCondition: VehicleDisabled
	# Plays static sound when vehicle is disabled.
	Voiced@Static:
		VoiceSet: StaticVoice
		RequiresCondition: VehicleDisabled

# Vehicles leave a husk when they're destroyed
^Husk:
	Inherits: ^CoreVisibleActor
	# Husks are only interactable, not selectable.
	Interactable:
	# Default husk's health amount.
	Health:
		HP: 500
	# Applying "vehicle"-damage to all actors based on this.
	Armor:
		Type: vehicle
	# At default fog hides every actor.
	HiddenUnderFog:
		Type: CenterPosition
		AlwaysVisibleRelationships: None
	# Husks sequences use facings.
	WithFacingSpriteBody:
	# Husks hitshape
	HitShape:
		Type: Circle
			Radius: 256
	# Husk trait which allows keeping actor's facing when it's dead.
	Husk:
		AllowedTerrain: Clear, ClearTree, ClearPipe, Creek, Shore, Sand, SandEdge, Road, Resources
	# Decrease husk's HP over time.
	ChangesHealth:
		Step: -25
		StartIfBelow: 101
		Delay: 10
	# Change owner to neutral when husk is created.
	OwnerLostAction:
		Action: ChangeOwner
	# Husks can be targeted by anything which attacks ground but are also ignored by other actors.
	Targetable:
		TargetTypes: Ground, Vehicle
		RequiresForceFire: true
	# Generic name for husks.
	Tooltip:
		GenericName: Destroyed Vehicle
	# Husks explode if killed or disappear.
	Explodes:
		Weapon: HuskExplosion
		EmptyWeapon: HuskExplosion
	# Husks can be crushed by other vehicles.
	Crushable:
		CrushClasses: husk
		WarnProbability: 0
		CrushedByFriendlies: True

# Husk throws a turret if it has it.
^HuskThrowsTurret:
	ThrowsParticle@Turret:
		Anim: turret
		MaxThrowRange: 0c256

# Husk burns - small fire
^HuskBurnsSmallFire:
	WithIdleOverlay@Burns:
		Image: fire
		Sequence: fire_small
		Palette:
		IsDecoration: true
	# Smoke particles are created when husks burns.
	FloatingSpriteEmitter@Burns:
		Duration: -1
		Lifetime: 27
		SpawnFrequency: 5
		Speed: 5
		Gravity: 42
		RandomRate: 0
		Palette:
		Offset: 0,-128,0
		Image: smoke
		Sequences: dark_smoke

# Husk burns - big fire
^HuskBurnsBigFire:
	WithIdleOverlay@Burns:
		Image: fire
		Sequence: fire_big
		Palette:
		IsDecoration: true
	# Smoke particles are created when husks burns.
	FloatingSpriteEmitter@Burns:
		Duration: -1
		Lifetime: 27
		SpawnFrequency: 5
		Speed: 5
		Gravity: 42
		RandomRate: 0
		Palette:
		Offset: 0,-128,0
		Image: smoke
		Sequences: dark_smoke

# SCREAMER blocks orders of enemy units.
^InterferedActor:
	# Actors will reject any order from player if they are interfered.
	RejectsOrders:
		RequiresCondition: VehicleInterfered
	# This allows using condition 'VehicleInterfered' which SCREAMER unit provides.
	ExternalCondition@Interference:
		Condition: VehicleInterfered
	# Render an indicator that actor is interfered.
	WithDecoration@Interference:
		Image: interference-indicator
		Sequence: idle
		Palette:
		Position: Top
		Offsets:
			VehicleDisabled: 15, 0
		RequiresCondition: VehicleInterfered

# Actor leaves track trail on ground.
^LeavesTracks:
	LeavesTrackTrails:
		Image: tracks
		Palette:
		TerrainTypes: Sand, SandEdge
		Type: CenterPosition
		MovingInterval: 8
		StartDelay: 0
		ChangeFacingInstantly: true

^LeavesSmallTracks:
	Inherits: ^LeavesTracks
	LeavesTrackTrails:
		Sequences: track_small

^LeavesMediumTracks:
	Inherits: ^LeavesTracks
	LeavesTrackTrails:
		Sequences: track_medium

^LeavesLargeTracks:
	Inherits: ^LeavesTracks
	LeavesTrackTrails:
		Sequences: track_large

^LeavesMedium2Tracks:
	Inherits: ^LeavesTracks
	LeavesTrackTrails:
		Sequences: track_medium2

^LeavesExtraLargeTracks:
	Inherits: ^LeavesTracks
	LeavesTrackTrails:
		Sequences: track_extra_large
